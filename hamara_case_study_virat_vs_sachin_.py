# -*- coding: utf-8 -*-
"""Hamara Case Study - VIrat vs Sachin .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rdywXer66ma-wdjXS2egSygzulQVpqV0
"""

import warnings
warnings.filterwarnings('ignore')

import pandas as pd
import numpy as np

import matplotlib.pyplot as plt

#to display all rows columns 
pd.set_option('display.max_rows', None)
pd.set_option('display.max_columns', None)  
pd.set_option('display.expand_frame_repr', False)
pd.set_option('max_colwidth', -1)

df = pd.read_csv('ODI_data.csv')

df.head(2)

len(df), len(df.columns)

# Runs per innings
# SR
# 100's
# 50's
# Team contribution

df['Innings Runs Scored Num'].unique()

df = df[df['Innings Runs Scored Num'] != '-']

df['Innings Runs Scored Num'].unique()

df = df.dropna(subset = ['Innings Runs Scored Num'])

df['Innings Runs Scored Num'].unique()

df.head(1)

# convert to datetime
df['Innings Date'] = pd.to_datetime(df['Innings Date'])

df['year'] = df['Innings Date'].dt.year

df.tail(1)

df['Innings Runs Scored Num'] = df['Innings Runs Scored Num'].astype('int')

df['Innings Balls Faced'] = df['Innings Balls Faced'].astype('int')

df['Innings Not Out Flag'] = df['Innings Not Out Flag'].astype('int')





# Sachin 1994 - 2004
# Virat 2009 - 2019

sachin_df = df[(df.year >= 1994) & (df.year <= 2004)]

kohli_df = df[(df.year >= 2009) & (df.year <= 2019)]

sachin_df.head(2)

kohli_df.head(2)

# Runs per innings = Total Runs/Total Innings
# SR = 100*(Total Runs/Total Balls)
# 100's = sum(100's)
# 50's = sum(50's)
# Team contribution = Player Runs/Team Runs (ex: Virat 50/ Team Ind 150 => 50/150 : 33%)

# sachin_df.to_csv('sachin_data.csv')

# sachin_df.head(20)

# SR Tendulkar
sdf = sachin_df[sachin_df['Innings Player'] == 'SR Tendulkar']

sdf.head()

# sum(sdf['Innings Runs Scored Num'])
sum(sdf['Innings Runs Scored Num'])

# kdf = kohli_df[kohli_df['Innings Player'] == 'V Kohli']
kdf = kohli_df[kohli_df['Innings Player'] == 'V Kohli']

# kohli_df['Innings Player'].unique()

kdf.head()

# sum(kdf['Innings Runs Scored Num'])
sum(kdf['Innings Runs Scored Num'])

len(kdf), len(sdf) # Number of innings played by kohli and sachin given by length oftheir respective dataframes.

# RPI - Sachin, Virat 
sum(kdf['Innings Runs Scored Num'])/len(kdf), sum(sdf['Innings Runs Scored Num'])/len(sdf)

# SR i.e. Strike Rate
100*sum(kdf['Innings Runs Scored Num'])/sum(kdf['Innings Balls Faced']), 100*sum(sdf['Innings Runs Scored Num'])/sum(kdf['Innings Balls Faced'])

# 100's scored by kohli and sachin respedctively 
sum(kdf["100's"]), sum(sdf["100's"])

# 50's scored by kohli and sachin respectively
sum(kdf["50's"]), sum(sdf["100's"])

# Team Contribution - Runs score by each player, Runs by team
sum(kdf['Innings Runs Scored Num']), sum(sdf['Innings Runs Scored Num'])

# 1994 - 2004 = Runs Scored By all players in team India
# sum(sachin_df[sachin_df.Country == 'India']['Innings Runs Scored Num'])
sum(sachin_df[sachin_df.Country == 'India']['Innings Runs Scored Num'])

# 2009 - 2019 = All players
sum(kohli_df[kohli_df.Country == 'India']['Innings Runs Scored Num'])

# % contribution by kohli in team india runs.(2009 - 2019)
100*sum(kdf['Innings Runs Scored Num']/sum(kohli_df[kohli_df.Country == 'India']['Innings Runs Scored Num']))

# % contribution by sachin in team india runs.(1994- 2004)
100*sum(sdf['Innings Runs Scored Num'])/sum(sachin_df[sachin_df.Country == 'India']['Innings Runs Scored Num'])

### Visualizations

sachin_df.groupby(['Innings Player'])['Innings Runs Scored Num'].sum().sort_values(ascending = False).head(10) # We use multiple functions here in python.b

sachin_df.groupby(['Innings Player'])['Innings Runs Scored Num'].sum().sort_values(ascending = False).head(10).plot(kind = 'barh')
plt.show()

kohli_df.groupby(['Innings Player'])['Innings Runs Scored Num'].sum().sort_values(ascending = False).head(10)

kohli_df.groupby(['Innings Player'])['Innings Runs Scored Num'].sum().sort_values(ascending = False).head(10).plot(kind = 'barh')
plt.show()

# We compared both sachin and kohli with their peers in their time frame and both sachin and virat came out on top.

sdf.head(1)

sdf.groupby(['year'])['Innings Runs Scored Num'].sum() # Runs scored in ODI by sachin in each year.

sdf.groupby(['year'])['Innings Runs Scored Num'].sum().plot(kind = 'bar')
plt.show()

kdf.groupby(['year'])['Innings Runs Scored Num'].sum() # Runs Scored by kohli in each year.

kdf.groupby(['year'])['Innings Runs Scored Num'].sum().plot(kind = 'bar')
plt.show()

### Normalization

# RPI = Sachin, Virat (RPI Or Average)
sum(kdf['Innings Runs Scored Num'])/len(kdf), sum(sdf['Innings Runs Scored Num'])/len(sdf)

# Kohli_df = player runs with Kohli
# player runs excluding Kohli => not_kohli = kohli_df[kohli_df.player_name != 'V Kohli']

# RPI - Sachin, Virat
sum(kohli_df['Innings Runs Scored Num'])/len(kohli_df) # It is average of all players with kohli, we will find out average without kohli next now.

non_kohli_df = kohli_df[kohli_df['Innings Player'] != 'V Kohli']

non_sachin_df = sachin_df[sachin_df['Innings Player'] != 'SR Tendulkar']

# Avg = 25 runs
# Kohli = 50

(sum(kdf['Innings Runs Scored Num'])/len(kdf))/(sum(non_kohli_df['Innings Runs Scored Num'])/len(non_kohli_df)) # Average scoring rate of kohli is 2 times better than his peers.

(sum(sdf['Innings Runs Scored Num'])/len(sdf))/(sum(non_sachin_df['Innings Runs Scored Num'])/len(non_sachin_df)) # Average scoring rate of sachin is almost 2 times better than his peers.

# kohli => other
# SR = V = 93, Other = 80, V/other, S/others
# 100s - Number of matches to score a 100
# 50s - Number of matches to score a 50
# Team contribution - V_cont/O_cont

# Suppose virat has 40 100's in 200 matches while sachin has 50 100's in 200 matches.
# 200/40 = 5 matches required for virat to score a century
# 200/50 = 4 matches required for sachin to score a century

# SR of sachin (SR = Strike Rate)
100*sum(sdf['Innings Runs Scored Num'])/sum(sdf['Innings Balls Faced'])

# SR of sachin's peers
100*sum(non_sachin_df['Innings Runs Scored Num'])/sum(non_sachin_df['Innings Balls Faced'])

# SR of kohli (SR = Strike Rate)
100*sum(kdf['Innings Runs Scored Num'])/sum(kdf['Innings Balls Faced'])

# SR of kohli's peers
100*sum(non_kohli_df['Innings Runs Scored Num'])/sum(non_kohli_df['Innings Balls Faced'])

# normalized sachin's value
sachin_sr = sum(sdf['Innings Runs Scored Num'])/sum(sdf['Innings Balls Faced'])
sachin_peer_sr = sum(non_sachin_df['Innings Runs Scored Num'])/sum(non_sachin_df['Innings Balls Faced'])
sachin_sr/sachin_peer_sr

kohli_sr = sum(kdf['Innings Runs Scored Num'])/sum(kdf['Innings Balls Faced'])
kohli_peer_sr = sum(non_kohli_df['Innings Runs Scored Num'])/sum(non_kohli_df['Innings Balls Faced'])
kohli_sr/kohli_peer_sr

### 100's: Number of matches to score 100

# sachin matches per 100
len(sdf)/sum(sdf["100's"])

# sachin peers - matches per 100
len(non_sachin_df)/sum(non_sachin_df["100's"]) # We completely see sachin peers take more matches than sachin to score 100 i.e.  48 compared to 8.

# kohli matches per 100
len(kdf)/sum(kdf["100's"])

# kohli peers -  matches per 100 
len(non_kohli_df)/sum(non_kohli_df["100's"]) # We completely see kohli peers take more matches than kohli to score 100 i.e 30 compared to 6.

# normalized sachin value
sachin_mper_100 = len(sdf)/sum(sdf["100's"])
sachin_peers_mper_100 = len(non_sachin_df)/sum(non_sachin_df["100's"])
sachin_mper_100/sachin_peers_mper_100

# normalized virat value
kohli_mper_100 = len(kdf)/sum(kdf["100's"])
kohli_peers_mper_100 = len(non_kohli_df)/sum(non_kohli_df["100's"])
kohli_mper_100/kohli_peers_mper_100

### 50's: Matches to score a 50's.

# sachin matches per 50
len(sdf)/sum(sdf["50's"])

# sachin peers - matches per 50
len(non_sachin_df)/sum(non_sachin_df["50's"])

# kohli matches per 50
len(kdf)/sum(kdf["50's"])

# kohli peers - matches per 50
len(non_kohli_df)/sum(non_kohli_df["50's"])

# normalized sachin value
sachin_mper_50 = len(sdf)/sum(sdf["50's"])
sachin_peers_mper_50 = len(non_sachin_df)/sum(non_sachin_df["50's"])
sachin_mper_50/sachin_peers_mper_50

# normalized virat value
kohli_mper_50 = len(kdf)/sum(kdf["50's"])
kohli_peers_mper_50 = len(non_kohli_df)/sum(non_kohli_df["50's"])
kohli_mper_50/kohli_peers_mper_50

### Team contribution here we are already comparing peers so no need of normalization.

# % of team runs by sachin
100*sum(sdf['Innings Runs Scored Num'])/(sum(non_sachin_df[non_sachin_df.Country == 'India']['Innings Runs Scored Num'])+sum(sdf['Innings Runs Scored Num']))

# % of team runs by kohli
100*sum(kdf['Innings Runs Scored Num'])/(sum(non_kohli_df[non_kohli_df.Country == 'India']['Innings Runs Scored Num'])+sum(kdf['Innings Runs Scored Num']))

# According to our analysis, 
# Kohli has better RPI of 2.03 compared to sachin's 1.94. (normalized value)
# Sachin has better SR of 1.22 compared to kohli's 1.12 (normalized value)
# Sachin need's less matches for 100 i.e. 0.15 to 0.18 of kohli (normalized value)
# Kohli need's less matches for 50 i.e. 0.55 to 0.57 of kohli (normalized value)
# Kohli has more %contribution to team runs of 17.6 compared to sachin 16.9%.
# Conclusion - Kohli is the winner here by margin 3 to 2.
# These data are only for some specific year, it does not tell who is more great bit it surely tells us we compared 2 Greats of the game.