# -*- coding: utf-8 -*-
"""Hamara Case Study ABD vs Bumrah.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZyIKyHI6iz4szxOn3bRSJzm5KfCkP1fj
"""

import warnings
warnings.filterwarnings('ignore')

import pandas as pd
import numpy as np

import matplotlib.pyplot as plt

#to display all rows columns 
pd.set_option('display.max_rows', None)
pd.set_option('display.max_columns', None)  
pd.set_option('display.expand_frame_repr', False)
pd.set_option('max_colwidth', -1)

# ipl_ball_by_ball_data

df = pd.read_csv('ipl_ball_by_ball_data.csv')

df.head(1)

df.innings.unique() # here innings 4, 3, 5, 6 represent duper over and double superover respectively.

df = df[(df.innings == 1) | (df.innings == 2)]

df.innings.unique() # Since we want only matchup data so we got rid of super over innings data by above code.

# What are the numbers when ABD faces Bumrah?
# step 1: Filter by player names 
# step 2: Use these names & assign it to striker & bowler 
# step 3: Get the required columns

df.bowling_team.unique()

df[df.bowling_team == 'Mumbai Indians']['bowler'].unique()

# player 1: JJ Bumrah
# player 2: AB de Villiers

df[df.batting_team == 'Royal Challengers Bangalore']['striker'].unique()

req_df = df[(df.striker == 'AB de Villiers') & (df.bowler == 'JJ Bumrah')]

req_df.head()

# No of runs scored?
# No of balls faced?
# No of times dismissed?

# runs scored by AB against Bumrah 
sum(req_df.runs_off_bat)

# balls faced by AB against Bumrah
len(req_df)

# outs
# len(req_df[req_df.player_dismissed == 'AB de Villiers'])
len(req_df[req_df.player_dismissed == 'AB de Villiers'])

# strike rate
# 100*sum(req_df.runs_off_bat)/len(req_df)
100*sum(req_df.runs_off_bat)/len(req_df)

# Comparision against all batsman Bumrah has bowled to

df.head(1)

# bumrah_df = df[df.bowler =='JJ Bumrah']
bumrah_df = df[df.bowler == 'JJ Bumrah']

bumrah_df.head()

pd.DataFrame(bumrah_df.groupby('striker')['runs_off_bat'].sum()) # Number of runs by batsaman while facing bumrah.

# runs scored by this batsman
bdf1 = pd.DataFrame(bumrah_df.groupby('striker')['runs_off_bat'].sum()).reset_index() # groupby always followed by aggregate function.

pd.DataFrame(bumrah_df.groupby('striker')['ball'].count()) # Number of balls faced by batsaman while facing bumrah.

bdf2 = pd.DataFrame(bumrah_df.groupby('striker')['ball'].count()).reset_index()

bdf2.head()

bdf3 = bdf1.merge(bdf2, on = 'striker', how = 'left') 
#  on merging we have to makesure they are DataFrame so we added it in our code because on group by it will be series.
# We want columns so we applied reset index.

bdf3['strike_rate'] = 100*bdf3['runs_off_bat']/bdf3['ball']

bdf3.head(1)

# min criteria: 30 balls

bdf3 = bdf3[bdf3.ball >= 30]

bdf3.head()

# abd_df = df[df.striker =='AB de Villiers']
abd_df = df[df.striker == 'AB de Villiers']

# runs scored by this batsman
adf1 = pd.DataFrame(abd_df.groupby('bowler')['runs_off_bat'].sum()).reset_index()

adf1.head() # Bowler information when abd was on strike.

# balls faced
adf2 = pd.DataFrame(abd_df.groupby('bowler')['ball'].count()).reset_index()

adf2.head() # Balls faced by AB.

adf3 = adf1.merge(adf2, on = 'bowler', how ='left')

adf3.head()

adf3['strike_rate'] = 100*adf3['runs_off_bat']/adf3['ball']

adf3.head()

# min criteria : 30 balls

adf3 = adf3[adf3.ball >= 30]

# bdf3, adf3

bdf3.reset_index(inplace = True, drop = True) # for making index good.
adf3.reset_index(inplace = True, drop = True)

bdf3 # It starts from zero.

bdf3.sort_values('strike_rate', ascending = False) # We sorted strike rate in descending order by ascending = False

adf3.sort_values('strike_rate', ascending = False) # it returns that russel is ABD's favourite bowler.

plt.figure(figsize = (16,8))
plt.scatter(bdf3.strike_rate, bdf3.runs_off_bat)

for i in range(len(bdf3)):
#     plt.text(x, y, text)
    if bdf3['striker'][i] == 'V Kohli':
        plt.text(bdf3['strike_rate'][i] - 7, bdf3['runs_off_bat'][i] - 1, bdf3['striker'][i] )
    else:
        plt.text(bdf3['strike_rate'][i] + 1, bdf3['runs_off_bat'][i] - 1, bdf3['striker'][i] )


plt.axvline(120, ls = '--', color = 'grey') # 120 is SR which should be greater than 120 then good batsman against bumrah.b
plt.axhline(60, ls = '--', color = 'grey')  # 60 is runs scored which should be greater than 60 then good batsman against bumrah
plt.title('Batsman against Bumrah in IPL (min 30 balls faced)', fontsize = 20)
plt.xlabel('Strike Rate')
plt.ylabel('Runs Scored')

plt.show()

plt.figure(figsize = (16,8))
plt.rcParams['axes.facecolor'] = '#fff7fb'
plt.scatter(bdf3.strike_rate, bdf3.runs_off_bat)

for i in range(len(bdf3)):
    if bdf3.striker[i] == 'V Kohli':
        plt.text(bdf3.strike_rate[i] - 7, bdf3.runs_off_bat[i] - 1, bdf3.striker[i])
    elif bdf3.striker[i] == 'AB de Villiers':
        plt.text(bdf3.strike_rate[i] + 2, bdf3.runs_off_bat[i] - 1, bdf3.striker[i], color = 'maroon')
    elif (bdf3.striker[i] == 'S Dhawan') | (bdf3.striker[i] == 'KL Rahul') | (bdf3.striker[i] == 'JP Duminy'):
        plt.text(bdf3.strike_rate[i] + 2, bdf3.runs_off_bat[i] - 1, bdf3.striker[i])

plt.axvline(120, ls = '--', color = 'grey')
plt.axhline(60, ls = '--', color = 'grey')
plt.title("Best Batman against Bumrah", fontsize = 20)
plt.xlabel('Strike rate')
plt.ylabel('Runs scored')
plt.savefig('Chart_ABD_vs_Bumrah_part1.jpg')
plt.show()

plt.figure(figsize = (16,8))
plt.rcParams['axes.facecolor'] = '#fff7fb'
plt.scatter(adf3.strike_rate, adf3.runs_off_bat)


        plt.text(adf3.strike_rate[i] + 2, adf3.runs_off_bat[i] - 1, adf3.bowler[i], color = 'maroon')
    elif (adf3.bowler[i] == 'RA Jadeja') | (adf3.bowler[i] == 'SL Malinga') | (adf3.bowler[i] == 'Sandeep Sharma') | (adf3.bowler[i] == 'Harbhajan Singh'):
        plt.text(adf3.strike_rate[i] + 2, adf3.runs_off_bat[i] - 1, adf3.bowler[i])
    elif (adf3.bowler[i] == 'HH Pandya'):
        plt.text(adf3.strike_rate[i], adf3.runs_off_bat[i] + 2, adf3.bowler[i])
    elif (adf3.bowler[i] == 'AD Russell'):
        plt.text(adf3.strike_rate[i] - 3, adf3.runs_off_bat[i] - 3, adf3.bowler[i])

plt.axvline(110, ls = '--', color = 'grey')
plt.axhline(80, ls = '--', color = 'grey')
plt.title("ABD's Favorite Bowlers", fontsize = 20)
plt.xlabel('Strike rate')
plt.ylabel('Runs scored')
plt.savefig('Chart_ABD_vs_Bumrah_part2.jpg')
plt.show()

# Above graph's shows that ABD has surely won the battle against Bumrah.

plt.figure(figsize = (16,8))
plt.rcParams['axes.facecolor'] = '#fff7fb'
plt.scatter(adf3.strike_rate, adf3.runs_off_bat)



plt.axvline(110, ls = '--', color = 'grey')
plt.axhline(80, ls = '--', color = 'grey')
plt.title("ABD's Favorite Bowlers", fontsize = 20)
plt.xlabel('Strike rate')
plt.ylabel('Runs scored')
plt.savefig('Chart_ABD_vs_Bumrah_part2.jpg')
plt.show()